{"version":3,"sources":["components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/comments/NewCommentForm.module.css","components/quotes/HighlightedQuote.module.css","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/NewCommentForm.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js"],"names":["module","exports","CommentItem","props","className","classes","item","text","CommentsList","comments","map","comment","enteredText","id","NewCommentForm","commentTextRef","useRef","useHttp","addComment","sendRequest","status","error","quoteId","useParams","useEffect","onAddComment","form","onSubmit","event","preventDefault","current","value","commentData","control","htmlFor","rows","ref","actions","Comments","useState","isAddingComment","setIsAddingComment","getAllComments","data","addCommentHandler","useCallback","LoadingSpinner","length","onClick","HighlightedQuote","quote","author","QuoteDetail","match","useRouteMatch","getSingleQuote","loadedData","path","exact","to","url"],"mappings":"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","file":"static/js/4.d01e76b5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__6FBqo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__EU7F0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__3uEq4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__1yHE0\",\"loading\":\"NewCommentForm_loading__39QK4\",\"control\":\"NewCommentForm_control__JWXOd\",\"actions\":\"NewCommentForm_actions__2craN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__felAQ\"};","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from \"./CommentItem\";\nimport classes from \"./CommentsList.module.css\";\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.enteredText} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useEffect, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { addComment } from \"../../lib/api\";\nimport useHttp from \"../../hooks/use-http\";\nimport classes from \"./NewCommentForm.module.css\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const { sendRequest, status, error } = useHttp(addComment, true);\n  const params = useParams();\n  const { quoteId } = params;\n\n  useEffect(() => {\n    if (status === \"completed\" && !error) props.onAddComment();\n  }, [props.onAddComment, status, error]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // optional: Could validate here\n\n    // send comment to server\n    const enteredText = commentTextRef.current.value;\n    sendRequest({ commentData: { enteredText }, quoteId });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {/* {status === \"pending\" && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )} */}\n      <div className={classes.control}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./Comments.module.css\";\nimport CommentsList from \"./CommentsList\";\nimport NewCommentForm from \"./NewCommentForm\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const { quoteId } = params;\n\n  const { sendRequest, status, data } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  let comments;\n\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === \"completed\" && data.length > 0) {\n    comments = <CommentsList comments={data} />;\n  }\n\n  if (status === \"completed\" && (!data || data.length === 0)) {\n    comments = <p className=\"centered\">No Comments were added yet!!</p>;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm onAddComment={addCommentHandler} />}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { useEffect } from \"react\";\r\nimport { Link, Route, useParams, useRouteMatch } from \"react-router-dom\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getSingleQuote } from \"../lib/api\";\r\n\r\nconst QuoteDetail = () => {\r\n  const match = useRouteMatch();\r\n  const params = useParams();\r\n  const { quoteId } = params;\r\n\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedData,\r\n    error,\r\n  } = useHttp(getSingleQuote, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest(quoteId);\r\n  }, [sendRequest, quoteId]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <p className=\"centered\">{error}</p>;\r\n  }\r\n\r\n  if (!loadedData.text) {\r\n    return <p>No quote found!!</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <HighlightedQuote text={loadedData.text} author={loadedData.author} />\r\n      <Route path={`${match.path}`} exact>\r\n        <Link to={`${match.url}/comments`} className=\"btn--flat\">\r\n          Load comments\r\n        </Link>\r\n      </Route>\r\n      <Route path={`${match.path}/comments`}>\r\n        <Comments />\r\n      </Route>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuoteDetail;\r\n"],"sourceRoot":""}